{"version":3,"sources":["components/Provider/ChartProvider.component.js","components/NavItem.js","components/Nav.js","components/ChartTemplate.js","components/ChartHead.js","components/ChartItem.js","MusicPortal.js","components/MusicModal.js","components/ChartList.js","components/theme/theme.js","App.js","index.js"],"names":["initialState","chart","modal","music","loading","data","error","search","name","videoId","chartReducer","state","action","type","id","Error","ChartStateContext","createContext","ChartDispatchContext","ChartProvider","children","useReducer","dispatch","Provider","value","useChartState","useContext","useChartDispatch","NavItemBlock","styled","div","Text","props","color","React","memo","text","onClick","e","target","innerText","NavBar","themeContext","ThemeContext","colors","MELON","GENIE","BUGS","ChartTemplateBlock","ChartHeadBlock","HoursText","theme","ChartHeadLine","today","Date","dateString","toLocaleDateString","hours","getHours","img","className","alt","src","ChartItemBlock","NameBlock","MusicName","AritistName","RankText","Image","imgPath","YouTubeButton","button","lighten","darken","artist","rank","musicName","parentNode","YTsearch","key","process","term","MusicPortal","el","document","getElementById","ReactDOM","createPortal","ModalTemplete","Content","ButtonBlock","ExitButton","opts","host","width","height","playerVar","autoplay","origin","MusicModal","ChartListBlock","herokuURL","site","a","axios","get","response","useEffect","getChart","map","title","GlobalStyle","createGlobalStyle","App","render","StrictMode"],"mappings":"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","file":"static/js/main.314eb619.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\n// state를 모아둔 것을 Provider(store)\n// 하위에서 사용 할 state 정의\n// 사용할 state를 return\nconst initialState = {\n  chart: 'MELON',\n  modal: false,\n  music: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  search: {\n    name: null,\n    videoId: null,\n  },\n};\nfunction chartReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_CHART':\n      return {\n        ...state,\n        chart: action.chart,\n      };\n    case 'GET_CHART':\n      return {\n        ...state,\n        music: {\n          loading: true,\n          data: null,\n          error: null,\n        },\n      };\n    case 'GET_CHART_SUCCESS':\n      return {\n        ...state,\n        music: {\n          loading: false,\n          data: action.data,\n          error: null,\n        },\n      };\n    case 'GET_CHART_ERROR':\n      return {\n        ...state,\n        music: {\n          loading: false,\n          data: null,\n          error: action.error,\n        },\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false,\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true,\n        search: {\n          name: action.name,\n          videoId: action.id,\n        },\n      };\n    default:\n      throw new Error(`Unhandle action type: ${action.type}`);\n  }\n}\n\nconst ChartStateContext = createContext();\nconst ChartDispatchContext = createContext();\n\nexport function ChartProvider({ children }) {\n  const [state, dispatch] = useReducer(chartReducer, initialState);\n  return (\n    <ChartStateContext.Provider value={state}>\n      <ChartDispatchContext.Provider value={dispatch}>\n        {children}\n      </ChartDispatchContext.Provider>\n    </ChartStateContext.Provider>\n  );\n}\n\n// 커스텀 Hook 만들기\nexport function useChartState() {\n  return useContext(ChartStateContext);\n}\n\nexport function useChartDispatch() {\n  return useContext(ChartDispatchContext);\n}\n// 다른 컴포넌트에서 import 후\n// const state = useChartState(); 이런식으로 사용 가능\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useChartDispatch } from './Provider/ChartProvider.component';\n\nconst NavItemBlock = styled.div`\n  display: flex;\n  align-items: center; /* flex에서 아이템들의 수직축 방향 정렬 */\n\n  padding-top: 12px;\n  padding-bottom: 9px;\n  padding-left: 20px;\n`;\n\nconst Text = styled.div`\n  font-size: 25px;\n  font-weight: bold;\n  color: #ffffff;\n  cursor: pointer;\n  &:first-letter {\n    color: ${(props) => props.color || 'white'};\n  }\n`;\nfunction NavItem({ text, color }) {\n  const dispatch = useChartDispatch();\n  const onChangeChart = (e) =>\n    dispatch({ type: 'CHANGE_CHART', chart: e.target.innerText });\n\n  return (\n    <NavItemBlock>\n      <Text color={color} onClick={onChangeChart}>\n        {text}\n      </Text>\n    </NavItemBlock>\n  );\n}\n\nexport default React.memo(NavItem);\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport NavItem from './NavItem';\n\nconst NavBar = styled.div`\n  width: 72.1vw;\n  height: 40px;\n  padding-left: 250px;\n  padding-right: 250px;\n  position: fix;\n  background: #393b44;\n  display: flex;\n  @media (max-width: 768px) {\n    background: white;\n  }\n`;\n\nfunction Nav({ children }) {\n  const themeContext = useContext(ThemeContext);\n  return (\n    <NavBar>\n      {/* <NavItem text=\"HOME\" /> */}\n      <NavItem color={themeContext.colors.MELON} text=\"MELON\" />\n      <NavItem color={themeContext.colors.GENIE} text=\"GENIE\" />\n      <NavItem color={themeContext.colors.BUGS} text=\"BUGS\" />\n    </NavBar>\n  );\n}\n\nexport default React.memo(Nav);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ChartTemplateBlock = styled.div`\n  width: 1200px;\n  height: 100vh;\n\n  margin-left: 270px;\n  margin-right: 270px;\n\n  position: relative;\n  background: #f6f6f6;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction ChartTemplate({ children }) {\n  return <ChartTemplateBlock>{children}</ChartTemplateBlock>;\n}\n\nexport default React.memo(ChartTemplate);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useChartState } from './Provider/ChartProvider.component';\n\nconst ChartHeadBlock = styled.div`\n  padding-left: 32px;\n  padding-right: 32px;\n\n  .date {\n    display: flex;\n    width: 350px;\n    margin: 0 auto;\n    font-size: 36px;\n    color: #343a40;\n    margin-bottom: 25px;\n  }\n  .chart {\n    font-size: 48px;\n    font-weight: bold;\n    display: flex;\n    align-items: flex-start;\n  }\n  .chart-name {\n    padding-top: 36px;\n    height: 100px;\n  }\n  .chart-img {\n    padding-top: 36px;\n    background-size: 142px 46px;\n    width: 142px;\n    height: 46px;\n  }\n`;\n\nconst HoursText = styled.div`\n  margin-left: 10px;\n  color: ${({ color, theme }) => theme.colors[color]};\n  /* 이거는 theme.colors.[color] state에 따라 color가 바뀜 */\n`;\n\nconst ChartHeadLine = styled.div`\n  border-bottom: 1px gray solid;\n  margin-left: -32px;\n  margin-right: -32px;\n  margin-bottom: 32px;\n`;\n\nfunction ChartHead({ children }) {\n  const today = new Date();\n  const dateString = today.toLocaleDateString();\n  const hours = today.getHours();\n  const { chart } = useChartState();\n  return (\n    <ChartHeadBlock img={chart}>\n      <div className=\"chart\">\n        <img className=\"chart-img\" alt=\"로고\" src={`/img/${chart}_logo.png`} />\n        <div className=\"chart-name\"> CHART</div>\n      </div>\n      <div className=\"date\">\n        <span className=\"today\">{dateString} </span>\n        <HoursText color={chart}>\n          {`${hours < 10 ? `0${hours}` : hours} `}: 00\n        </HoursText>\n      </div>\n      <ChartHeadLine />\n    </ChartHeadBlock>\n  );\n}\n\nexport default React.memo(ChartHead);\n","import React from 'react';\nimport styled from 'styled-components';\nimport YTsearch from 'youtube-api-search';\nimport { lighten, darken } from 'polished'; // css 유틸 함수 라이브러리\nimport { AiFillYoutube } from 'react-icons/ai';\nimport { useChartDispatch } from './Provider/ChartProvider.component';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst ChartItemBlock = styled.div`\n  display: flex;\n  border: 1px #212121 solid;\n  border-radius: 6px;\n  padding: 10px 54px;\n  align-items: center;\n`;\n\nconst NameBlock = styled.div`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 24px;\n`;\n\nconst MusicName = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nconst AritistName = styled.div`\n  font-size: 16px;\n  font-weight: 450;\n  color: #393b44;\n`;\n\nconst RankText = styled.div`\n  width: 50px;\n  font-size: 26px;\n  color: #797a7e;\n  font-weight: bold;\n  margin-right: 24px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.imgPath});\n  background-size: 60px 60px;\n  width: 60px;\n  height: 60px;\n  border-radius: 8px;\n`;\n\nconst YouTubeButton = styled.button`\n  width: 30px;\n  height: 30px;\n  margin-left: 120px;\n  color: #ff0102;\n  font-size: 30px;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background: #f6f6f6;\n  &:hover {\n    color: ${lighten(0.1, '#ff0102')};\n  }\n  &:active {\n    color: ${darken(0.1, '#ff0102')};\n  }\n`;\n\nfunction ChartItem({ imgPath, music, artist, rank }) {\n  const dispatch = useChartDispatch();\n  const handleOpenMusic = (e) => {\n    const musicName = e.target.id || e.target.parentNode.id;\n    YTsearch({ key: API_KEY, term: musicName }, (data) => {\n      dispatch({\n        type: 'OPEN_MODAL',\n        name: musicName,\n        id: data[0].id.videoId,\n      });\n    });\n  };\n\n  return (\n    <ChartItemBlock id={music}>\n      <RankText>{rank}</RankText>\n      <Image imgPath={imgPath} />\n      <NameBlock>\n        <MusicName>{music}</MusicName>\n        <AritistName>{artist}</AritistName>\n      </NameBlock>\n      <YouTubeButton>\n        <AiFillYoutube id={music} onClick={handleOpenMusic} />\n      </YouTubeButton>\n    </ChartItemBlock>\n  );\n}\n\nexport default React.memo(ChartItem);\n","import ReactDOM from 'react-dom';\n\nfunction MusicPortal({ children }) {\n  const el = document.getElementById('modal');\n  return ReactDOM.createPortal(children, el);\n}\n\nexport default MusicPortal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport YouTube from 'react-youtube';\nimport { lighten, darken } from 'polished';\nimport { MdClear } from 'react-icons/md';\nimport {\n  useChartDispatch,\n  useChartState,\n} from './Provider/ChartProvider.component';\n\nconst ModalTemplete = styled.div`\n  background: rgba(0, 0, 0, 0.25);\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  background: #373a40;\n  padding: 1rem;\n  width: 640px;\n  height: 480px;\n  border-radius: 6px;\n`;\nconst ButtonBlock = styled.div`\n  width: 672px;\n  height: auto;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ExitButton = styled.button`\n  background: none;\n  color: #555555;\n  &:hover {\n    color: ${lighten(0.1, '#000000')};\n  }\n  &:active {\n    color: ${darken(0.1, '#000000')};\n  }\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  font-size: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  outline: none;\n  border: none;\n`;\n\nconst opts = {\n  host: 'https://www.youtube.com',\n  width: '640',\n  height: '480',\n  playerVar: {\n    autoplay: 1,\n    origin: 'http://localhost:3000',\n  },\n};\nfunction MusicModal() {\n  const dispatch = useChartDispatch();\n  const { search } = useChartState();\n  const handleCloseMusic = () => dispatch({ type: 'CLOSE_MODAL' });\n  return (\n    <ModalTemplete>\n      <ButtonBlock>\n        <ExitButton onClick={handleCloseMusic}>\n          <MdClear />\n        </ExitButton>\n      </ButtonBlock>\n      <Content>\n        <YouTube videoId={search.videoId} opts={opts} />\n      </Content>\n    </ModalTemplete>\n  );\n}\n\nexport default MusicModal;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport ChartItem from './ChartItem';\nimport axios from 'axios';\nimport {\n  useChartDispatch,\n  useChartState,\n} from './Provider/ChartProvider.component';\nimport MusicPortal from '../MusicPortal';\nimport MusicModal from './MusicModal';\n\nconst ChartListBlock = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px 78px; /* 위아래 20, 양옆 32 */\n`;\n\nfunction ChartList() {\n  const dispatch = useChartDispatch();\n  const { chart, music, modal } = useChartState();\n  const herokuURL = 'https://hidden-ridge-32364.herokuapp.com/chart/';\n  // const localURL = 'http://localhost:3002/chart/';\n  async function getChart(site) {\n    dispatch({ type: 'GET_CHART' });\n    try {\n      const response = await axios.get(`${herokuURL}/${site}`);\n      dispatch({ type: 'GET_CHART_SUCCESS', data: response.data });\n    } catch (e) {\n      dispatch({ type: 'GET_CHART_ERROR', error: e });\n    }\n  }\n  useEffect(() => {\n    getChart(chart);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart]);\n  const { data, error } = music;\n\n  if (error) return <div>에러!</div>;\n  return (\n    <>\n      <ChartListBlock>\n        {data &&\n          data.map((music) => (\n            <ChartItem\n              key={music.id}\n              rank={music.id}\n              imgPath={music.img}\n              music={music.title}\n              artist={music.artist}\n            />\n          ))}\n      </ChartListBlock>\n      {modal && (\n        <MusicPortal>\n          <MusicModal />\n        </MusicPortal>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(ChartList);\n","const colors = { MELON: \"#02cd3b\", GENIE: \"#24b5e6\", BUGS: \"#ff3c28\" };\n\nconst theme = { colors };\n\nexport default theme;\n","import React from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport NavBar from './components/Nav';\nimport ChartTemplate from './components/ChartTemplate';\nimport ChartHead from './components/ChartHead';\nimport ChartList from './components/ChartList';\nimport { ChartProvider } from './components/Provider/ChartProvider.component';\nimport theme from './components/theme/theme';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    background: #e9ecef;\n  }\n  `;\n// 사용하고자 하는 자식 컴포넌트를 밖에서 <Provider>로 감싸주기\nfunction App() {\n  return (\n    <>\n      <ChartProvider>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>\n          <NavBar />\n          <ChartTemplate>\n            <ChartHead />\n            <ChartList />\n          </ChartTemplate>\n        </ThemeProvider>\n      </ChartProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}